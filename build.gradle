plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.data:spring-data-rest-hal-explorer'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    runtimeOnly 'mysql:mysql-connector-java'
    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.hibernate:hibernate-core'
    implementation 'org.springframework:spring-orm'


}

test {
    useJUnitPlatform()
}

task welcome{
    doLast {
        println("Welcome gradle task")
    }
}

task upload{
    exec{
        commandLine 'git', 'init'
        commandLine 'git', 'add', '.'
        commandLine 'git', 'commit','-m','commited'
        commandLine 'git','remote','add','origin','https://github.com/Shahjalal-Sakil/Demo-Spring.git'
        commandLine 'git','remote','-v'
        commandLine 'git','push','origin','master'

    }
}
task gitPush(type:Exec){
    workingDir '.'
    commandLine 'chmod' ,'+x', 'gitpush.sh'
    commandLine './gitpush.sh'

}




